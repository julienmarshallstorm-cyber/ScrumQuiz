[
  {
    "question": "What is the purpose of the print() function in Python?",
    "answers": [
      "Outputs data to the console",
      "Stores data in a file",
      "Reads user input",
      "Performs calculations"
    ],
    "correctIndex": 0,
    "quote": "print() is used to display information on the console."
  },
  {
    "question": "Which of the following is a valid variable name in Python?",
    "answers": [
      "2nd_variable",
      "second-variable",
      "second_variable",
      "second variable"
    ],
    "correctIndex": 2,
    "quote": "Variable names must start with a letter or underscore, can contain numbers, and cannot include spaces or special characters like -."
  },
  {
    "question": "What is the result of the following code?\n\nx = 5\ny = 2\nprint(x / y)",
    "answers": [
      "2.5",
      "2",
      "2.0",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "The / operator in Python 3 always performs floating-point division."
  },
  {
    "question": "Which of the following data types is immutable?",
    "answers": [
      "List",
      "Set",
      "Dictionary",
      "Tuple"
    ],
    "correctIndex": 3,
    "quote": "Tuples cannot be changed after creation, unlike lists, sets, or dictionaries."
  },
  {
    "question": "What is the result of this code?\n\nx = 10\ny = 3\nprint(x // y)",
    "answers": [
      "3.3333",
      "3",
      "3.0",
      "Error"
    ],
    "correctIndex": 1,
    "quote": "The // operator performs integer division, returning the integer part of the division."
  },
  {
    "question": "What is the output of the following code?\n\nx = 5\nif x > 3:\n    print(\"Greater\")\nelse:\n    print(\"Smaller\")",
    "answers": [
      "Greater",
      "Smaller",
      "Error",
      "No output"
    ],
    "correctIndex": 0,
    "quote": "Since x is greater than 3, the if block executes."
  },
  {
    "question": "Which loop is used to iterate over a list of elements?",
    "answers": [
      "for",
      "while",
      "do-while",
      "repeat-until"
    ],
    "correctIndex": 0,
    "quote": "for loops are used to iterate directly over sequences like lists."
  },
  {
    "question": "What is the result of this code?\n\nx = 0\nwhile x < 3:\n    print(x)\n    x += 1",
    "answers": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "The loop prints 0, 1, 2. The loop stops when x reaches 3."
  },
  {
    "question": "Which keyword can be used to exit a loop immediately?",
    "answers": [
      "stop",
      "break",
      "exit",
      "continue"
    ],
    "correctIndex": 1,
    "quote": "break stops the loop instantly. continue skips to the next iteration."
  },
  {
    "question": "What does the range(5) function return?",
    "answers": [
      "[0, 1, 2, 3, 4]",
      "[1, 2, 3, 4, 5]",
      "[0, 1, 2, 3, 4, 5]",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "range(n) generates integers from 0 up to n-1."
  },
  {
    "question": "What is the purpose of the print() function in Python?",
    "answers": [
      "Outputs data to the console",
      "Stores data in a file",
      "Reads user input",
      "Performs calculations"
    ],
    "correctIndex": 0,
    "quote": "print() is used to display information on the console."
  },
  {
    "question": "Which of the following is a valid variable name in Python?",
    "answers": [
      "2nd_variable",
      "second-variable",
      "second_variable",
      "second variable"
    ],
    "correctIndex": 2,
    "quote": "Variable names must start with a letter or underscore, can contain numbers, and cannot include spaces or special characters like -."
  },
  {
    "question": "What is the result of the following code?\n\nx = 5\ny = 2\nprint(x / y)",
    "answers": [
      "2.5",
      "2",
      "2.0",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "The / operator in Python 3 always performs floating-point division."
  },
  {
    "question": "Which of the following data types is immutable?",
    "answers": [
      "List",
      "Set",
      "Dictionary",
      "Tuple"
    ],
    "correctIndex": 3,
    "quote": "Tuples cannot be changed after creation, unlike lists, sets, or dictionaries."
  },
  {
    "question": "What is the result of this code?\n\nx = 10\ny = 3\nprint(x // y)",
    "answers": [
      "3.3333",
      "3",
      "3.0",
      "Error"
    ],
    "correctIndex": 1,
    "quote": "The // operator performs integer division, returning the integer part of the division."
  },
  {
    "question": "What is the output of the following code?\n\nx = 5\nif x > 3:\n    print(\"Greater\")\nelse:\n    print(\"Smaller\")",
    "answers": [
      "Greater",
      "Smaller",
      "Error",
      "No output"
    ],
    "correctIndex": 0,
    "quote": "Since x is greater than 3, the if block executes."
  },
  {
    "question": "Which loop is used to iterate over a list of elements?",
    "answers": [
      "for",
      "while",
      "do-while",
      "repeat-until"
    ],
    "correctIndex": 0,
    "quote": "for loops are used to iterate directly over sequences like lists."
  },
  {
    "question": "What is the result of this code?\n\nx = 0\nwhile x < 3:\n    print(x)\n    x += 1",
    "answers": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "The loop prints 0, 1, 2. The loop stops when x reaches 3."
  },
  {
    "question": "Which keyword can be used to exit a loop immediately?",
    "answers": [
      "stop",
      "break",
      "exit",
      "continue"
    ],
    "correctIndex": 1,
    "quote": "break stops the loop instantly. continue skips to the next iteration."
  },
  {
    "question": "What does the range(5) function return?",
    "answers": [
      "[0, 1, 2, 3, 4]",
      "[1, 2, 3, 4, 5]",
      "[0, 1, 2, 3, 4, 5]",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "range(n) generates integers from 0 up to n-1."
  },
  {
    "question": "How do you define a function in Python?",
    "answers": [
      "function my_func():",
      "def my_func():",
      "func my_func():",
      "define my_func():"
    ],
    "correctIndex": 1,
    "quote": "def is used to declare a function in Python."
  },
  {
    "question": "What is the default return value of a function that doesn't explicitly return anything?",
    "answers": [
      "None",
      "0",
      "False",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "Functions return None if there is no return statement."
  },
  {
    "question": "Which of these calls a function greet with the argument \"Alice\"?",
    "answers": [
      "greet[\"Alice\"]",
      "greet(\"Alice\")",
      "greet = \"Alice\"",
      "greet{Alice}"
    ],
    "correctIndex": 1,
    "quote": "Functions are called using parentheses with arguments inside."
  },
  {
    "question": "What is a parameter in a function?",
    "answers": [
      "The value returned by a function",
      "A variable used inside the function definition to receive input",
      "The function name",
      "A loop inside the function"
    ],
    "correctIndex": 1,
    "quote": "Parameters are placeholders for arguments passed to a function."
  },
  {
    "question": "What does this function call return?\n\ndef add(x, y=2):\n    return x + y\nadd(3)",
    "answers": [
      "5",
      "3",
      "2",
      "Error"
    ],
    "correctIndex": 0,
    "quote": "The default parameter y=2 is used because no argument is provided for y."
  },
  {
    "question": "Which of these creates an empty list?",
    "answers": [
      "[]",
      "{}",
      "()",
      "list = None"
    ],
    "correctIndex": 0,
    "quote": "Square brackets create a list. {} creates a dictionary; () creates a tuple."
  },
  {
    "question": "How do you add an element \"a\" to a list my_list?",
    "answers": [
      "my_list.add(\"a\")",
      "my_list.append(\"a\")",
      "my_list.insert(\"a\")",
      "my_list.put(\"a\")"
    ],
    "correctIndex": 1,
    "quote": "append() adds a single element at the end of the list."
  },
  {
    "question": "Which of these is a mutable data type?",
    "answers": [
      "Tuple",
      "String",
      "List",
      "Integer"
    ],
    "correctIndex": 2,
    "quote": "Lists can be modified after creation; tuples and strings are immutable."
  },
  {
    "question": "How do you access the first element of a list my_list?",
    "answers": [
      "my_list(0)",
      "my_list[0]",
      "my_list.first()",
      "my_list.get(0)"
    ],
    "correctIndex": 1,
    "quote": "Indexing with [0] retrieves the first element."
  },
  {
    "question": "Which of these methods removes and returns the last element of a list my_list?",
    "answers": [
      "pop()",
      "remove()",
      "delete()",
      "discard()"
    ],
    "correctIndex": 0,
    "quote": "pop() removes and returns the last element. remove() deletes a specified value."
  },
  {
    "question": "How do you define a class in Python?",
    "answers": [
      "class MyClass:",
      "def MyClass:",
      "function MyClass:",
      "object MyClass:"
    ],
    "correctIndex": 0,
    "quote": "class is used to declare a class in Python."
  },
  {
    "question": "Which method is called when creating a new instance of a class?",
    "answers": [
      "__start__",
      "__init__",
      "__new__",
      "__create__"
    ],
    "correctIndex": 1,
    "quote": "__init__ initializes instance attributes when a new object is created."
  },
  {
    "question": "How do you create an instance of a class Person?",
    "answers": [
      "Person()",
      "Person[]",
      "Person{}",
      "Person.create()"
    ],
    "correctIndex": 0,
    "quote": "Calling the class name with parentheses creates a new instance."
  },
  {
    "question": "Which keyword defines a method that belongs to the class instance?",
    "answers": [
      "self",
      "this",
      "cls",
      "instance"
    ],
    "correctIndex": 0,
    "quote": "self refers to the current instance and is required as the first parameter in instance methods."
  },
  {
    "question": "Which symbol is used for inheritance in Python?",
    "answers": [
      "<",
      ":",
      "()",
      "{}"
    ],
    "correctIndex": 2,
    "quote": "Class inheritance is specified inside parentheses: class Child(Parent):"
  },
  {
    "question": "Which method converts all characters in a string to uppercase?",
    "answers": [
      "upper()",
      "capitalize()",
      "title()",
      "lower()"
    ],
    "correctIndex": 0,
    "quote": "upper() returns a copy of the string with all letters in uppercase."
  },
  {
    "question": "What is the output of 'Python'[0]?",
    "answers": [
      "'Python'",
      "'P'",
      "'y'",
      "0"
    ],
    "correctIndex": 1,
    "quote": "Indexing starts at 0, so the first character is 'P'."
  },
  {
    "question": "How do you read user input as a string?",
    "answers": [
      "input()",
      "read()",
      "scanf()",
      "get()"
    ],
    "correctIndex": 0,
    "quote": "input() reads a line from the console as a string."
  },
  {
    "question": "Which operator checks if a substring exists in a string?",
    "answers": [
      "in",
      "==",
      "contains()",
      "has()"
    ],
    "correctIndex": 0,
    "quote": "The in operator returns True if the substring is found."
  },
  {
    "question": "What is the output of 'abc'.replace('b', 'x')?",
    "answers": [
      "'axc'",
      "'abc'",
      "'xbc'",
      "'abx'"
    ],
    "correctIndex": 0,
    "quote": "replace() replaces all occurrences of 'b' with 'x'."
  },
  {
    "question": "What will be the output after the following code snippet is executed?\na = 5 // 3 * 2\nprint(A)",
    "answers": [
      "2",
      "0",
      "2.0",
      "Python will show an error"
    ],
    "correctIndex": 3,
    "quote": "The code will raise a NameError because variable 'A' (uppercase) is used in print() but 'a' (lowercase) was assigned the value. Python is case-sensitive."
  },
  {
    "question": "What will be the output after running the following code?\nprint(len('H'), len('I!'), sep='', end='!')",
    "answers": [
      "HI!!",
      "2",
      "12!",
      "12"
    ],
    "correctIndex": 2,
    "quote": "len('H') returns 1, len('I!') returns 2. sep='' removes the space between them, so '12' is printed. end='!' adds '!' at the end, resulting in '12!'."
  },
  {
    "question": "What will be the output of the following snippet?\ndef show_truth():\n    mysterious_var = 'New Surprise!'\n    print(mysterious_var)\n\nmysterious_var = 'Surprise!'\nprint(mysterious_var)\nshow_truth()\nprint(mysterious_var)",
    "answers": [
      "New Surprise!\nNew Surprise!\nNew Surprise!",
      "Surprise!\nSurprise!\nSurprise!",
      "Surprise!\nNew Surprise!\nSurprise!",
      "Surprise!\nNew Surprise!\nNew Surprise!"
    ],
    "correctIndex": 2,
    "quote": "The function creates a new local variable 'mysterious_var' that shadows the global one. The global variable remains unchanged outside the function."
  },
  {
    "question": "What will be the output of the following code?\ndef show_truth():\n    mysterious_var.append('New Surprise!')\n    print(mysterious_var)\n\nmysterious_var = ['Surprise!']\nprint(mysterious_var)\nshow_truth()\nprint(mysterious_var)",
    "answers": [
      "['Surprise!']\n['Surprise!']\n['Surprise!', 'New Surprise!']",
      "['Surprise!']\n['Surprise!', 'New Surprise!']\n['Surprise!', 'New Surprise!']",
      "['Surprise!']\n['Surprise!', 'New Surprise!']\n['Surprise!']",
      "['Surprise!', 'New Surprise!']\n['Surprise!', 'New Surprise!']\n['Surprise!', 'New Surprise!']"
    ],
    "correctIndex": 1,
    "quote": "Lists are mutable. The function modifies the original list by appending to it, so all prints show the modified list with both elements."
  },
  {
    "question": "What is true about the following code snippet?\nlist1 = [1, 2, 3]\nlist2 = list1[:]",
    "answers": [
      "list2 and list1 will point to the same list in the memory",
      "list2 and list1 will point to two different lists in the memory",
      "The syntax list1[:] is incorrect and Python will show an error because you need to provide at least one index in the square brackets",
      "It is impossible to predict upfront if the two variables will point to the same list or not."
    ],
    "correctIndex": 1,
    "quote": "Using list1[:] creates a shallow copy of the list, so list2 points to a different list object in memory with the same elements."
  },
  {
    "question": "Which of the following does the Python interpreter verify before executing Python code?",
    "answers": [
      "Alphabetic, lexical, analytical and syntactical correctness",
      "Alphabetic, lexical, syntactical and semantic correctness",
      "Alphabetic, lexical, syntactical and informal correctness",
      "Binary, lexical, syntactical and semantic correctness"
    ],
    "correctIndex": 1,
    "quote": "Python checks: alphabetic (valid characters), lexical (token formation), syntactical (grammar rules), and semantic (meaning/context) correctness before execution."
  },
  {
    "question": "What are built-in Python functions?",
    "answers": [
      "Functions that call themselves.",
      "Functions that come with Python and are an integral part of Python.",
      "Functions that need to be imported before they can be used.",
      "Functions that are hidden from programmers and can't be used directly."
    ],
    "correctIndex": 1,
    "quote": "Built-in functions are always available in Python without any import statements, such as print(), len(), range(), etc."
  },
  {
    "question": "What will be the sum of all elements in the list after the following operations?\nnumbers = [0, 1, 2]\nnumbers.insert(0, 1)\ndel numbers[1]",
    "answers": [
      "0",
      "4",
      "3",
      "5"
    ],
    "correctIndex": 2,
    "quote": "After numbers.insert(0, 1): [1, 0, 1, 2]. After del numbers[1]: [1, 1, 2]. Sum = 1 + 1 + 2 = 4"
  },
  {
    "question": "Which of the following is incorrect for a dictionary in Python?",
    "answers": [
      "each key must be unique",
      "the key should be an immutable object",
      "the len() function returns the sum of key-value elements in the dictionary",
      "the len() function returns the numbers of key-value elements in the dictionary"
    ],
    "correctIndex": 2,
    "quote": "len() returns the number of key-value pairs (elements), not the sum. Each key must be unique and keys should be immutable objects."
  },
  {
    "question": "Python name comes from which of the following?",
    "answers": [
      "Python Café",
      "Python Forest",
      "Python snake",
      "Monty Python's Flying Circus"
    ],
    "correctIndex": 3,
    "quote": "Python was named after the British comedy series 'Monty Python's Flying Circus', not the snake."
  },
  {
    "question": "What does the method items() returns in Python Dictionary?",
    "answers": [
      "The method items() returns the lists",
      "The method items() returns the tuples",
      "The method items() returns the keys in a list",
      "The method items() returns the values in a list"
    ],
    "correctIndex": 1,
    "quote": "dict.items() returns a view object of tuples containing (key, value) pairs for each dictionary entry."
  },
  {
    "question": "A complete, self-contained unit of Python code that can be executed is called a:",
    "answers": [
      "Script",
      "Code laws",
      "Command-line",
      "Command list"
    ],
    "correctIndex": 0,
    "quote": "A Python script is a complete, self-contained program that can be executed by the Python interpreter."
  },
  {
    "question": "Which of the following are correct statements?",
    "answers": [
      "True + 1 evaluates to 2",
      "True and False evaluates to False",
      "True or False evaluates to False",
      "7 + False evaluates to False"
    ],
    "correctIndex": 1,
    "quote": "True + 1 = 2 (True=1), True and False = False (logical AND), True or False = True (logical OR), 7 + False = 7 (False=0)"
  },
  {
    "question": "Octal has the following base:",
    "answers": [
      "2",
      "8",
      "10",
      "16"
    ],
    "correctIndex": 1,
    "quote": "Octal numeral system has base 8, using digits 0-7. Binary=base2, Decimal=base10, Hexadecimal=base16."
  },
  {
    "question": "If a list passed into function's argument and modified inside the function:",
    "answers": [
      "Will affect the argument",
      "Will not affect the argument",
      "Will give an error",
      "Will become global by default"
    ],
    "correctIndex": 0,
    "quote": "Lists are mutable objects in Python. When passed to a function, modifications affect the original list since it's passed by object reference."
  },
  {
    "question": "An integer number preceded by an 0x (Zero-x) will be treated as:",
    "answers": [
      "Octal",
      "Binary",
      "Hexadecimal",
      "Decimal"
    ],
    "correctIndex": 2,
    "quote": "0x prefix indicates hexadecimal (base16), 0o prefix indicates octal (base8), 0b prefix indicates binary (base2)."
  },
  {
    "question": "Who created Python?",
    "answers": [
      "Guido ban Rossum",
      "Guido van Rossum",
      "Guido the Russian",
      "Guodo van Rossum"
    ],
    "correctIndex": 1,
    "quote": "Python was created by Guido van Rossum and first released in 1991."
  },
  {
    "question": "The meaning of positional parameter is determined by:",
    "answers": [
      "Position",
      "Name",
      "Style"
    ],
    "correctIndex": 0,
    "quote": "Positional parameters are determined by their position/order in the function call, unlike keyword parameters which are identified by name."
  }

]